<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="Generic - Files"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
  <description>
Sniffs related to file layout
  </description>

  <rule name="ByteOrderMark" class="Generic_Sniffs_Files_ByteOrderMarkSniff">
    <description>
Reports cases where a byte order mark is found in any PHP file to avoid application failures.
    </description>
  </rule>

  <rule name="LineEndings" class="Generic_Sniffs_Files_LineEndingsSniff">
    <description>
Line endings must be $eolChar. Defaults to making sure that everything has UNIX line endings.
    </description>
    <properties>
      <property name="eolChar"
                description="Use \n for UNIX line endings and \r\n for WINDOWS line endings."
                value="\n"/>
    </properties>
    <example>
      <![CDATA[
// One of those lines is wrong. $eolChar decides which one
echo "My line";\r\n
echo "My other line";\n
      ]]>
    </example>
  </rule>

  <rule name="LineLength" class="Generic_Sniffs_Files_LineLengthSniff">
    <description>
Lines should not longer than $lineLimit (warning) and must not be longer than $absoluteLineLimit (error).

If $lineLimit and $absoluteLineLimit are configured to have the same value only one error is reported.
To turn of $absoluteLineLimit '0' can be used.
    </description>
    <properties>
      <property name="lineLimit" description="Lines longer than this value will raising a warning" value="80"/>
      <property name="absoluteLineLimit" description="Lines longer than this value will raising an error" value="100"/>
    </properties>
  </rule>

</ruleset>
